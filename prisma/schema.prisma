// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Not used at the moment
model users {
  id            Int           @id @default(autoincrement())
  email         String         @unique
  password      String
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  name          String?
  emailVerified DateTime?
  image         String?
  icedCoffees   IcedCoffee[] 
  accounts      Account[] 
  sessions      Session[]
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  type              String
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId]) // Composite unique constraint
}


model Session {
  id            String   @id @default(cuid())
  userId        String
  expires       DateTime
  sessionToken  String   @unique
  accessToken   String
  user          User     @relation(fields: [userId], references: [id])
}


model CoffeeShop {
  id            Int           @id @default(autoincrement()) // Primary key
  coffeeShopId  String        @unique
  name          String
  location      String
  rating        Float
  image         String
  icedCoffees   IcedCoffee[]
}

model IcedCoffee {
  id            Int           @id @default(autoincrement())
  name          String
  price         Float
  rating        Float
  description   String
  image         String
  coffeeShopId  String
  coffeeShop    CoffeeShop    @relation(fields: [coffeeShopId], references: [coffeeShopId])
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  createdAt     DateTime      @default(now())
}